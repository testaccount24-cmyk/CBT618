/*rexx*/
call api_vars
address tso
msg=msg('off')
call leo_ckds_en_stem
address ispexec
do until salir='si'
   call tabla_ispf
   call veo_seleccion
end
exit

leo_ckds_en_stem:
   'newstack'
   call pcsfckds
   tot=queued()
   do i=1 to tot
      pull label 'Ç' type 'Ç' .
      label.i=label
      type.i=type
   end
return

tabla_ispf:
  campos = 'sel1 sel2 label type'
  'TBCREATE tabla NAMES('campos') KEYS(i) REPLACE NOWRITE'
  'TBVCLEAR tabla'
  sel1=' ' ; sel2='Ñ'
  do i=1 to tot
    label=label.i ; type=type.i
    if label.i¬=' ' then 'TBADD tabla'
  end
  'TBTOP tabla'
  'TBDISPL tabla PANEL(PCSFP01)'
  if rc=8 then salir='si'
  IF ZTDSELS ¬= 0 THEN DO
       sel2=sel1
       'TBMOD tabla'
       DO WHILE ZTDSELS > 1
          'TBDISPL tabla'
          sel2=sel1
          'TBMOD tabla'
          IF ZTDSELS = 1 THEN LEAVE
       END
  END
return

veo_seleccion:
  address ispexec
  'TBTOP tabla'
  do forever
     'TBSKIP tabla'
     if rc¬=0 then leave
     if (sel2='d'|sel2='D') then call delete_key
  end
return

delete_key:
     'ADDPOP'
     'DISPLAY PANEL(PCSFP02)'
     rrc=rc
     'REMPOP'
     if rrc=8 then return
     labelreg=left(label,64)||left(type,8)
     address linkpgm "CSNBKRD ReturnCode ReasonCode"   ,
                     "ExitDataLength ExitData"        ,
                     "RuleArrayCount RuleArray",
                     "labelreg"
     ret=ReturnValue(ReturnCode,ReasonCode,label,'CSNBKRD')
     label.i=' '
return

api_vars:
  ReturnCode       = d2f(0)
  ReasonCode       = d2f(0)
  ExitData         = ' '
  ExitDataLength   = d2f(0)
  RuleArrayCount   = d2f(1)
  RuleArray        = 'LABEL-DL'
return
d2f: procedure ; arg d ; return right('00000000'x||d2c(d),4)

ReturnValue: procedure
 parse arg retc , resc , val , func .
 if c2d(retc) <> 0 | c2d(Resc) <> 0 then do
     say func' -> Return: 'c2x(retc)'  Reason: 'c2x(resc)
     exit 8
 end
return retc
