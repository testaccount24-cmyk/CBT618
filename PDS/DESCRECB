       ID DIVISION.
      *---------------------------------------------------------
      *  DES KEY - KEY GENERATE
      *---------------------------------------------------------
       PROGRAM-ID.    DESCRECB.
       DATE-COMPILED. &SYSDATE.
       AUTHOR.        PERGENTINO.
      *---------------------------------------------------------
       ENVIRONMENT DIVISION.
      *---------------------------------------------------------
       CONFIGURATION SECTION.
       SOURCE-COMPUTER.  IBM-9021  WITH DEBUGGING MODE.
       OBJECT-COMPUTER.  IBM-9021.

      *---------------------------------------------------------
       DATA DIVISION.
      *---------------------------------------------------------
       FILE SECTION.
      *
       WORKING-STORAGE SECTION.
      *
      * DEFINE API INPUT/OUTPUT PARAMETERS
      *
       01  API-REC.
           05  RETURN-COD                 PIC 9(8) COMP.
           05  REASON-COD                 PIC 9(8) COMP.
           05  EXIT-DATA-LENGTH           PIC 9(8) COMP.
           05  EXIT-DATA                  PIC X(4).
           05  KEY-FORM                   PIC X(4)
               VALUE 'OP  '.
           05  KEY-LEN                    PIC X(8)
               VALUE 'SINGLE  '.
           05  KEY-TYP1                   PIC X(8)
               VALUE 'DATA    '.
           05  KEY-TYP2                   PIC X(8)
               VALUE '        '.
           05  DATA-ID                    PIC X(64)
               VALUE LOW-VALUES.
           05  NULL-ID                    PIC X(64)
               VALUE LOW-VALUES.
           05  KEY-ID1                    PIC X(64)
               VALUE LOW-VALUES.
           05  KEY-ID2                    PIC X(64)
               VALUE LOW-VALUES.
           05  KEY-LABEL                  PIC X(64)
               VALUE 'COBOLKEYCREATE'.
      *
      *---------------------------------------------------------
       PROCEDURE DIVISION.
      *---------------------------------------------------------
       MAIN-RTN.
      *--------- CALL KEY GENERATE ----------------------
           CALL 'CSFKGN' USING  RETURN-COD
                                REASON-COD
                                EXIT-DATA-LENGTH
                                EXIT-DATA
                                KEY-FORM
                                KEY-LEN
                                KEY-TYP1
                                KEY-TYP2
                                KEY-ID1
                                KEY-ID2
                                DATA-ID
                                NULL-ID.
           IF RETURN-COD NOT = 0 THEN
              DISPLAY '*** KEY GENERATE ***'
              DISPLAY '*** RETURN-COD = ' RETURN-COD
              DISPLAY '*** REASON-COD = ' REASON-COD
              MOVE RETURN-COD TO RETURN-CODE
              STOP RUN
           END-IF.
      *--------- CALL RECORD CREATE --------------
           CALL 'CSFKRC' USING  RETURN-COD
                                REASON-COD
                                EXIT-DATA-LENGTH
                                EXIT-DATA
                                KEY-LABEL.
           IF RETURN-COD NOT = 0 THEN
              DISPLAY '*** RECORD CREATE ***'
              DISPLAY '*** RETURN-COD = ' RETURN-COD
              DISPLAY '*** REASON-COD = ' REASON-COD
              MOVE RETURN-COD TO RETURN-CODE
              STOP RUN
           END-IF.
      *--------- CALL RECORD WRITE ---------------
           CALL 'CSFKRW' USING  RETURN-COD
                                REASON-COD
                                EXIT-DATA-LENGTH
                                EXIT-DATA
                                DATA-ID
                                KEY-LABEL.
           IF RETURN-COD NOT = 0 THEN
              DISPLAY '*** RECORD WRITE ***'
              DISPLAY '*** RETURN-COD = ' RETURN-COD
              DISPLAY '*** REASON-COD = ' REASON-COD
              MOVE RETURN-COD TO RETURN-CODE
              STOP RUN
           END-IF.
           DISPLAY '*** KEY COBOLKEYCREATE O.K. ***'
           STOP RUN.
